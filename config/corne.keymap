/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <27>; };

&caps_word { continue-list = <UNDERSCORE MINUS SPACE SQT BSPC DELETE COMMA DOT FSLH SEMI>; };

/ {
    combos {
        compatible = "zmk,combos";

        space {
            bindings = <&kp SPACE>;
            key-positions = <19 20>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };

        del_word {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <21 22>;
        };

        MaxCreen {
            bindings = <&kp LG(UP_ARROW)>;
            key-positions = <6 7>;
        };

        Copy {
            bindings = <&kp LC(C)>;
            key-positions = <2 3>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <4 3>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <2 1>;
        };

        screenshot {
            bindings = <&kp LS(LG(S))>;
            key-positions = <13 14>;
        };

        CapLock {
            bindings = <&caps_word>;
            key-positions = <35 24>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp E         &kp R        &kp T               &kp Y              &kp U        &kp I          &kp O    &kp P     &kp BSPC
&kp LCMD    &kp A  &kp S  &kp D         &lt 2 F      &kp G               &kp H              &kp J        &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHIFT  &kp Z  &kp X  &kp C         &kp V        &lt 3 B             &kp N              &kp M        &kp COMMA      &kp DOT  &kp FSLH  &kp RSHIFT
                          &kp LEFT_ALT  &lt 1 SPACE  &kp LEFT_CONTROL    &kp RIGHT_CONTROL  &lt 1 SPACE  &kp RIGHT_ALT
            >;
        };

        layer_1 {
            bindings = <
&kp TAB     &kp F10  &kp F7  &kp F4        &kp F1  &kp LEFT_BRACKET        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp BSPC
&kp LCMD    &kp F11  &kp F8  &kp F5        &kp F2  &kp RIGHT_BRACKET       &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp SQT
&kp LSHIFT  &kp F12  &kp F9  &kp F6        &kp F3  &kp NON_US_BACKSLASH    &kp MINUS     &kp EQUAL     &kp COMMA     &kp PERIOD    &kp SLASH     &kp RIGHT_SHIFT
                             &kp LEFT_ALT  &none   &kp LCTRL               &kp RCTRL     &kp N0        &kp RALT
            >;
        };

        layer_2 {
            bindings = <
&kp TAB         &none  &none  &none          &none  &none        &kp SPACE  &kp HOME  &kp UP_ARROW    &kp END    &none  &kp DELETE
&none           &none  &none  &kp LS(LCTRL)  &none  &none        &kp SPACE  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &none  &none
&kp LC(LSHIFT)  &none  &none  &none          &none  &none        &kp SPACE  &none     &kp DOWN        &none      &none  &kp END
                              &kp LEFT_ALT   &none  &kp LCTRL    &kp RCTRL  &none     &kp RIGHT_ALT
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR_ALL  &bt BT_CLR        &bt BT_SEL 0       &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3    &rgb_ug RGB_TOG  &rgb_ug RGB_COLOR_HSB(58,75,53)  &rgb_ug RGB_EFF   &none              &kp A              &kp BSPC
&none           &none             &none              &none              &none         &none           &bl BL_TOG       &none                            &none             &none              &none              &none
&kp LSHIFT      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &none         &none           &bootloader      &none                            &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &kp RSHIFT
                                                     &kp LCTRL          &none         &kp LCTRL       &kp RCTRL        &none                            &kp RIGHT_ALT
            >;
        };
    };
};
